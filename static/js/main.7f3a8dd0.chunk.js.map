{"version":3,"sources":["logo.svg","modules/fetchData.js","App.js","reportWebVitals.js","index.js"],"names":["fetchData","xhr","XMLHttpRequest","onreadystatechange","this","readyState","responseText","open","EP_MARVEL_BASE","send","fetchAllCharacters","App","console","log","className","src","logo","alt","href","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wJAAe,G,KAAA,IAA0B,kCCkBnCA,G,KAAY,WACd,OAfuB,WACvB,IAAMC,EAAM,IAAIC,eAChBD,EAAIE,mBAAqB,WACrB,GAAwB,IAApBC,KAAKC,WACL,OAAOJ,EAAIK,cAMnBL,EAAIM,KAHW,MACHC,4FACE,GAEdP,EAAIQ,OAIGC,K,OCYIC,MA3Bf,WAIE,OAFAC,QAAQC,IAAIb,KAGV,sBAAKc,UAAU,MAAf,UACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,sCACO,8CADP,0BAGA,mBACEH,UAAU,WACVI,KAAK,sBACLC,OAAO,SACPC,IAAI,sBAJN,4BASF,+BACI,cCbKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.7f3a8dd0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const RC_MARVEL_PUBLIC_KEY = '9f829b5e3be89dfe129ba4aa8fce641f';\nconst EP_MARVEL_BASE = 'https://gateway.marvel.com/';\nconst EP_ALL_CHARACTERS = '/v1/public/characters';\n\nconst fetchAllCharacters = () => {\n    const xhr = new XMLHttpRequest();\n    xhr.onreadystatechange = function () {\n        if (this.readyState === 4) {\n            return xhr.responseText;\n        }\n    }\n    const method = 'GET';\n    const url = EP_MARVEL_BASE + EP_ALL_CHARACTERS + '?apikey=' + RC_MARVEL_PUBLIC_KEY;\n    const async = true;\n    xhr.open(method, url, async);\n    xhr.send();\n}\n\nconst fetchData = () => {\n    return fetchAllCharacters();\n}\n\nexport { fetchData };","import logo from './logo.svg';\nimport './App.css';\nimport { fetchData } from './modules/fetchData';\n\nfunction App() {\n\n  console.log(fetchData());\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n      <main>\n        { 'Hello' }\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}